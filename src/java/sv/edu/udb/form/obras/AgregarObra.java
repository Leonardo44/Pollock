/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sv.edu.udb.form.obras;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sv.edu.udb.entidades.Autor;
import sv.edu.udb.entidades.Obra;
import sv.edu.udb.modelos.Obra_Model;
import sv.edu.udb.validacion.Validacion;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
/**
 *
 * @author Diego Lemus
 */
public class AgregarObra extends javax.swing.JInternalFrame {
    private List<Autor> autor = new ArrayList<Autor>();

    /**
     * Creates new form AgregarObra
     */
    public AgregarObra() {
        initComponents();
        iniciarComponentes();
        cargarAutores();
    }
    public void iniciarComponentes(){
        cargarAutores();
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtUrlImagen.setText("");
    }
    public void cargarAutores(){
        cmbAutores.removeAllItems(); //Remover Items
        autor = Obra_Model.obtenerAutores();
        for(Autor _a : autor){
            cmbAutores.addItem(_a.getNombres() + " "+ _a.getApellidos());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDescripcion = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtUrlImagen = new javax.swing.JTextField();
        cmbAutores = new javax.swing.JComboBox<>();
        btnAgregarObra = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();

        setClosable(true);
        setTitle("Registrar Obras");

        lblDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblDescripcion.setText("Descripción");

        lblNombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblNombre.setText("Nombre");
        lblNombre.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Url Imagen");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("Autor");

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtUrlImagen.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        cmbAutores.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        btnAgregarObra.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAgregarObra.setText("Agregar");
        btnAgregarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarObraActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setText("Agregar Obras");

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUrlImagen)
                                    .addComponent(cmbAutores, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)))))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblTitulo)
                                .addGap(278, 278, 278))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAgregarObra, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(275, 275, 275))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescripcion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUrlImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(btnAgregarObra, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean validarDatos() {
        if(Validacion.validar("^[A-Z][A-Za-z ñ.]+$",txtNombre.getText() , "Porfavor, revise el nombre de la obra", "Agregar Obras")
                && Validacion.validar("^[A-Za-z ñ,.)'0-9ñáéíóú:(-]+$",txtDescripcion.getText(),"Alguno caracteres no estan permitidos en la descripción","Agregar Obras")
                && Validacion.validar("^[A-Za-z .'/_:#?0-9-+]+$", txtUrlImagen.getText(), "Ingrese una URL correcta", "Agregar Obras")){
        return true;
        }else{
         return false;
        }
    }
    private boolean verificarVacios(){
        if((txtNombre.getText().length() > 0) && !(txtNombre.getText().equals("")) && !(txtNombre.getText().isEmpty())){
           if((txtDescripcion.getText().length() > 0) && !(txtDescripcion.getText().equals("")) && !(txtDescripcion.getText().isEmpty())){
               if((txtUrlImagen.getText().length() > 0) && !(txtUrlImagen.getText().equals("")) && !(txtUrlImagen.getText().isEmpty())){
                   return true;
               }else{
                   return false;
               }
            }else{
               return false;
           }
        }else{
            return false;
        }
    }

    private static void saveImage(String imageUrl,String destinationFile) throws IOException{
        URL url = new URL(imageUrl);
        InputStream is = url.openStream();
        OutputStream os = new FileOutputStream(destinationFile);
        byte[] b = new byte[2048];
        int length;
        while((length = is.read(b)) != -1){
            os.write(b,0,length);
        }
        is.close();
        os.close();
    }
    private static void mover(String archivoDestino){
        String savePath = System.getProperty("user.dir") + "^web^images^obras";
        savePath = String.join(System.getProperty("file.separator"), savePath.split("\\^"));
        Path origenPath =  Paths.get(System.getProperty("user.dir") + "\\" + archivoDestino);
        Path destinoPath = Paths.get(savePath +"\\"+ archivoDestino);
        try{
        Files.move(origenPath, destinoPath, StandardCopyOption.REPLACE_EXISTING);
        }catch(IOException ex){
            Logger.getLogger(AgregarObra.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void btnAgregarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarObraActionPerformed
        try{
            if(verificarVacios() && validarDatos()){
               String idAutor = "";
               Autor objectAutor = null;
               for(Autor _a: autor){
                   if((_a.getNombres() + " "+ _a.getApellidos()).equals(cmbAutores.getSelectedItem().toString())){
                       idAutor = String.valueOf(_a.getIdAutor());
                       objectAutor = _a;
                       break;
                   }
               }
               String idObra = Obra_Model.nuevoId();
               String urlImg = txtUrlImagen.getText();
               String archivoDestino = idObra + ".jpg";
               if(Obra_Model.insertar(new Obra(idObra,txtNombre.getText(),txtDescripcion.getText(),archivoDestino,objectAutor))){
                    saveImage(urlImg, archivoDestino);
                    mover(archivoDestino);
                    iniciarComponentes();
                   JOptionPane.showMessageDialog(null,"Obra registrada correctamente","Registro de Obras",JOptionPane.INFORMATION_MESSAGE);
               }else{
                   JOptionPane.showMessageDialog(null,"Ha ocurrido un error al registrar la obra","Registro de Obras",JOptionPane.ERROR_MESSAGE);
               }
            }
        }catch(Exception ex){
            Logger.getLogger(AgregarObra.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_btnAgregarObraActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarObra;
    private javax.swing.JComboBox<String> cmbAutores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtUrlImagen;
    // End of variables declaration//GEN-END:variables
}
