package sv.edu.udb.form.autor;


import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sv.edu.udb.entidades.Autor;
import sv.edu.udb.entidades.Pais;
import sv.edu.udb.entidades.Usuario;
import sv.edu.udb.form.usuario.AgregarUsuario;
import sv.edu.udb.modelos.Autor_Model;
import sv.edu.udb.modelos.Pais_Model;
import sv.edu.udb.modelos.Usuario_Model;
import sv.edu.udb.validacion.Validacion;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Leonardo
 */
public class gestionAutor extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = null;
    private List<Autor> autores = new ArrayList<Autor>();
    private List<Pais> paises = new ArrayList<Pais>();
    private String idUsuarioSeleccionado = "";
    
    /**
     * Creates new form gestionAutor
     */
    public gestionAutor() {
        initComponents();
        inicializarComponentes();
        cargarAutores();
        cargarPais();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFiltro = new javax.swing.JLabel();
        txtBuscador = new javax.swing.JTextField();
        cmbBuscador = new javax.swing.JComboBox<>();
        lblBuscador = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbAutores = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblFechaNacimiento = new javax.swing.JLabel();
        lblPais = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtFechaNacimiento = new javax.swing.JTextField();
        cmbPais = new javax.swing.JComboBox<>();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        lblFiltro.setText("Filtro");

        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorKeyReleased(evt);
            }
        });

        cmbBuscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido", "Pais" }));

        lblBuscador.setText("Patrón a buscar");

        jtbAutores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbAutores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbAutoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbAutores);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestión de Autores"));

        lblNombre.setText("Nombre");

        lblApellido.setText("Apellido");

        lblFechaNacimiento.setText("Fecha de Nacimiento");

        lblPais.setText("Pais");

        cmbPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPais)
                            .addComponent(lblFechaNacimiento)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblApellido)
                                .addComponent(lblNombre)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(txtApellido)
                            .addComponent(txtFechaNacimiento)
                            .addComponent(cmbPais, 0, 152, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(btnModificar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaNacimiento)
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPais)
                    .addComponent(cmbPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnModificar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(218, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFiltro, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBuscador, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBuscador)
                    .addComponent(cmbBuscador, 0, 133, Short.MAX_VALUE))
                .addGap(322, 322, 322))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltro)
                    .addComponent(cmbBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscador)
                    .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorKeyReleased
        if(cmbBuscador.getSelectedItem().toString().equals("Nombre")){ //Buscar por nombre
            autores = Autor_Model.obtenerAutores(" WHERE A.nombres LIKE '%"+ txtBuscador.getText() +"%'");
        }else if(cmbBuscador.getSelectedItem().toString().equals("Apellido")){//Buscar por apellido
            autores = Autor_Model.obtenerAutores(" WHERE A.apellidos LIKE '%"+ txtBuscador.getText() +"%'");
        }else if(cmbBuscador.getSelectedItem().toString().equals("Pais")){ //Buscar por Correo
            autores = Autor_Model.obtenerAutores(" WHERE P.nombre LIKE '%"+ txtBuscador.getText() +"%'");
        }
        
        if(txtBuscador.getText().length() == 1){
            autores = Autor_Model.obtenerAutoresGestion(); //Obtenemos el listado de usuario (todos)
        }
        cargarAutores();
    }//GEN-LAST:event_txtBuscadorKeyReleased

    private void jtbAutoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbAutoresMouseClicked
        if(autores.size() > 0){ //Si el array no esta vacío
            int fila = jtbAutores.rowAtPoint(evt.getPoint());
            if(fila > -1){
                idUsuarioSeleccionado = autores.get(fila).getIdAutor(); //Añadimos el id del usuario seleccionado
                txtNombre.setText(autores.get(fila).getNombres());
                txtApellido.setText(autores.get(fila).getApellidos());
                
                //Formatea fecha
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                String date = format.format(autores.get(fila).getFechaNac().getTime());
                txtFechaNacimiento.setText(date);
                
                if(autores.get(fila).getObras().size() > 0){ //Deshabilita el boton de eliminar según el número de obras
                    btnEliminar.setEnabled(false);
                }else{
                    btnEliminar.setEnabled(true);
                }
                
                //Seleccionamos el pais del autor
                for(int item = 0; item < cmbPais.getItemCount(); item++){
                    if(cmbPais.getItemAt(item).toString().equals(autores.get(fila).getPais())){
                        cmbPais.setSelectedIndex(item);
                    }
                }
            }
        }
    }//GEN-LAST:event_jtbAutoresMouseClicked

    //Modificar Autor
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(idUsuarioSeleccionado.length() > 0){
            if(validarCampos()){
                modificarAutor();
                inicializarComponentes();
                cargarPais();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona un usuario", "Gestión de Autor", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    public void modificarAutor(){
        try {
            String pais = "";
            for(Pais p : paises){
                if(p.getNombre().equals(cmbPais.getSelectedItem().toString())){
                    pais = String.valueOf(p.getIdPais());
                    break;
                }
            }
                    
            String nombre = txtNombre.getText(), 
                apellido = txtApellido.getText();
            DateFormat ft = new SimpleDateFormat("yyyy-MM-dd");  
            Date fechaNacimiento = ft.parse(txtFechaNacimiento.getText());
                    
            if(compararFecha(fechaNacimiento)){
                if(Autor_Model.modificar(new Autor(idUsuarioSeleccionado, nombre, apellido, fechaNacimiento, pais))){
                    JOptionPane.showMessageDialog(null, "Autor modificado correctamente", "Gestión de Autor", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Ha ocurrido un error", "Gestión de Autor", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(AgregarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //Botón de eliminar
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(idUsuarioSeleccionado.length() > 0){
            int respuesta = JOptionPane.showConfirmDialog(null,"¿Estas seguro eliminar este Autor?", "Gestión de Autor", JOptionPane.WARNING_MESSAGE);
            if(respuesta == JOptionPane.OK_OPTION){ //Eliminar
                
                if(Autor_Model.eliminar(new Autor(idUsuarioSeleccionado, false))){
                    JOptionPane.showMessageDialog(null, "Autor eliminado correctamente", "Gestión de Autor", JOptionPane.INFORMATION_MESSAGE);
                    inicializarComponentes();
                    cargarPais();
                    cargarAutores();
                }else{
                    JOptionPane.showMessageDialog(null, "Error en el proceso de eliminación", "Gestión de Autor", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecciona un usuario", "Gestión de Usuario", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
    
    private boolean validarCampos(){
        if(Validacion.validar("^[\\p{L} .'-]+$", txtNombre.getText(), "Ingresar un nombre válido!", "Agregar Autor")
           && Validacion.validar("^[\\p{L} .'-]+", txtApellido.getText(), "Ingresar un apellido válido!", "Agregar Autor")
           && Validacion.validar("^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}$", txtFechaNacimiento.getText(), "Fecha Inválida (yyyy-MM-dd)", "Agregar Autor")){
            return true;
        }
        return false;
    }
    
    private boolean compararFecha(Date fecha){
        Date fechaActual = new Date();
        if(fecha.compareTo(fechaActual) < 0){
            return true;
        }else{
            JOptionPane.showMessageDialog(null, "Ingresar una fecha válida", "Registro de Autor", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }
    
    private void cargarAutores(){ //Llena la JTable de autores
        Object[][] datos = null;
        String[] columns = {"Nombre", "Apellido", "Fecha de Nacimiento", "Pais"};
        modelo = new DefaultTableModel(datos, columns);
        
        for(Autor _a : autores){
            Object[] nuevaLinea = {_a.getNombres(), _a.getApellidos(), _a.getFechaNac(), _a.getPais()};
            modelo.addRow(nuevaLinea);
        }       
        jtbAutores.setModel(modelo);
    }
    
    private void inicializarComponentes(){
        autores = Autor_Model.obtenerAutoresGestion();
        paises = Pais_Model.obtenerPaises();
        
        //Limpiamos el pequeño formulario
        txtNombre.setText("");
        txtApellido.setText("");
        txtFechaNacimiento.setText("");
        cmbPais.removeAllItems();
        idUsuarioSeleccionado = "";
    }
    
    private void cargarPais(){
        cmbPais.removeAllItems();
        paises = Pais_Model.obtenerPaises();
        for (Pais p : paises) {
            cmbPais.addItem(p.getNombre());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbBuscador;
    private javax.swing.JComboBox<String> cmbPais;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbAutores;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblBuscador;
    private javax.swing.JLabel lblFechaNacimiento;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPais;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscador;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
